from .english import English


class French(English):
    def __init__(self):
        super().__init__()

        self.ping = {
            "embed": {
                "title": "üèì Pong !",
                "description": "Latence de Shibbot : `{ping}ms`\nCharge machine : `CPU: {cpu}%` `RAM: {ram}%`"
            },
            "buttons": {
                "status": "Page de Statut"
            }
        }

        # help.py cog
        self.get_invitation = {
            "embed": {
                "title": "Invitation",
                "description": "Utilisez les boutons ci-dessous pour vous y rendre. Merci si vous invitez Shibbot !",
                "footer": "Image d'un shiba appr√©ciant les fonctionnalit√©s de Shibbot. | Shibbot ‚Ä¢ v{version}",
            },
            "buttons": {
                "bot_invite": "Invite mwa !",
                "support": "Serveur de support"
            }
        }
        self.bot_info = {
            "embed": {
                "title": "A propos de Shibbot",
                "fields": [
                    {
                        "name": "Description",
                        "value": "Shibbot est un bot multifonction pr√©sent sur `{n_servers}` serveurs et √©crit en Python par JeanLeShiba ([dsc.bio](https://dsc.bio/jls), [github](https://github.com/JeanLeShiba)). Le but est de proposer un bot sympa et fun avec de nombreuses fonctionnalit√©s pour les personnes qui g√®rent un serveur et les membres eux-m√™mes avec des plugins de mod√©ration, des utilitaires, du divertissement... Le projet est toujours en b√™ta donc si vous rencontrez des probl√®mes contactez le propri√©taire en mp ou via le serveur de support."
                    },
                    {
                        "name": "Specs",
                        "value": "Le bot tourne actuellement sur :\nüêç Version Python : `{python_version}`\n‚ö° Version Pycord : `{pycord_version}`\n‚ù§ Coeurs : `{n_threads} thread(s)`\nüìè RAM : `{ram_usage}/{n_ram}MB`\nüñ• H√©berg√© √† : `{place}`"
                    },
                    {
                        "name": "Supportez le projet",
                        "value": "Tout ceci a √©t√© r√©alis√© b√©n√©volement sans but de se faire de l'argent, donc pour continuer √† faire vivre le projet, consid√©rez faire [un don Paypal]({donation_link}) (merci). Dans le cas o√π vous voudriez contribuer en trouvant des bugs ou am√©liorer le code, rendez-vous sur [la page Github](https://github.com/JeanLeShiba/Shibbot) ou contactez moi par l'un des moyens cit√©s ci-dessus."
                    }
                ]
            }
        }
        self.show_help = {
            "embed": {
                "title": "__**Aide Shibbot!**__",
                "description": "**Salut üëã ! Je suis Shibbot**, un bot capable de faire des choses comme de la mod√©ration, des recherches sur Wikip√©dia, envoyer des memes, etc... Vous souhaitez en apprendre plus sur moi ? Utilisez `botinfo`, wow.",
                "fields": [
                    {
                        "name": "Commandes :",
                        "value": "- `plugins` : Pour activer ou d√©sactiver les plugins du bot (utiliser si le bot est l√† pour la premi√®re fois sur le serveur).\n- `lang` : Change la langue.\n- `prefix` : Pour d√©finir un pr√©fixe personnalis√© sur ce serveur."
                    },
                    {
                        "name": "Quoi de neuf ?",
                        "value": "üá´üá∑ Support en Fran√ßais\nPossibilit√© de kick/ban plusieurs personnes en une commande\nNormaliser le pseudo d'un membre avec `username`\nAjout de chats et d'oiseaux."
                    },
                    {
                        "name": "Obtenir de l'aide :",
                        "value": "Le pr√©fixe actuel est `{prefix}`. Pour obtenir la liste des commandes d'une cat√©gorie, cliquez sur la barre si dessous puis sur une des options pour commencer ‚¨á."
                    }
                ],
                "footer": "Shibbot v{version} | L√©gende: []: requis ‚Ä¢ <> : optionel ‚Ä¢ ‚ö† Indisponible / Ne marche pas encore"
            },
            "select": {
                "placeholder": "S√©lectionner une cat√©gorie ici :",
                "info": {
                    "label": "Commandes du bot",
                    "description": "Apprenez en plus sur Shibbot et configurez le sur votre serveur"
                },
                "mod": {
                    "label": "Mod√©ration",
                    "description": "Vous permet de mod√©rer votre serveur et ses utilisateurs."
                },
                "fun": {
                    "label": "Amusements",
                    "description": "Commandes fun. Yay :D"
                },
                "tools": {
                    "label": "Outils",
                    "description": "Outils utiles √† utiliser directement dans un salon."
                },
            },
            "buttons": {
                "invite": "Invitez-moi !",
                "support": "Serveur de Support",
                "donate": "Faire un don"
            },
            "info": {
                "description": "**Infos & Configuration :** Apprenez en plus sur Shibbot et configurez le sur votre serveur.",
                "fields": [
                    {
                        "name": "Commands",
                        "value": """
- `help`: Montre cette page
- `invite`: Envoie un lien d'invitation du bot pour l'inviter sur votre serveur ou acc√©der au serveur de support
- `ping`: Montre le ping de Shibbot
- `plugins` : Pour activer ou d√©sactiver les plugins du bot sur ce serveur (√† utiliser si le bot vient de rejoindre pour la premi√®re fois)
- `lang` : Change le langage du bot
- `prefix [pr√©fixe]` : Pour d√©finir un pr√©fixe personnalis√© sur ce serveur
- `avatar <utilisateur>` : Montre l'avatar d'un utilisateur
- `uinfo [utilisateur]` : Montre des informations sur l'utilisateur sp√©cifi√©
- `sinfo` : Montre des informations sur ce serveur
"""
                    }
                ]
            },
            "mod": {
                "description": "**Mod√©ration :** Aides pour mod√©rer votre serveur.",
                "fields": [
                    {
                        "name": "Commandes classiques",
                        "value": """
- `logs [salon]` : D√©finit ou change le salon de log de ce serveur
- `clear [quantit√©] <utilisateur>` : Supprime jusqu'√† 100 messages √† la fois dans le salon
- `warn [membre] <raison>` : warnst un membre
- `clearwarns [utilisateur]` : Supprime les warns d'un membre
- `mute [membre] <raison>` : Rend un memebre muet
- `unmute [membre] <raison>` : Rend la parole √† un membre
- `kick [membre] <raison>` : Expulse un membre
- `ban [utilisateur] <raison>` : Bannit un membre
- `unban [utilisateur] <raison>` : Retire un utilisateur de la liste des bannis"""
                    },
                    {
                        "name": "Commandes √† dur√©e limit√©e",
                        "value": """
- `tempmute [membre] [dur√©e] <raison>` : Rend un membre muet pour la dur√©e sp√©cifi√©e
- `tempban [membre] [dur√©e] <raison>` : Bannit un membre pour la dur√©e sp√©cifi√©e
"""
                    },
                    {
                        "name": "Commandes sp√©cifiques / Plus complexes",
                        "value": """
- `normalize [membre]` : Rend "normal" le pseudo d'un membre
- `nuke` : KADABOOM jusqu'√† 1000 messages dans le salon (dangereux)
- `softban [membre] <raison>` : Kick un membre du serveur, supprime tous ses messages des derni√®res 24h et le r√©invite. Utile pour un utilisateur qui s'est fait hacker par exemple
- `multikick [membres s√©par√©s par un espace]` : Expulse plusieurs membres en une seule commande
- `multiban [membres s√©par√©s par un espace]` : Bannit plusieurs membres en une commande. √âquivalent plus violent de multikick"""
                    },
                    {
                        "name": "Commandes d'informations",
                        "value": """
- `warnings [utilisateur]` : Liste les warns d'un membre
‚ö† - `perms [membre]` : Liste les permissions d'un membre
‚ö† - `roles [membre]` : Liste les r√¥les d'un membre
"""
                    }
                ]
            },
            "fun": {
                "description": "**Amusement :** Commandes fun. Yay :D",
                "fields": [
                    {
                        "name": "Commandes",
                        "value": """
- `meme` : Donne un meme al√©atoire vol√© des subreddits les plus dr√¥les
- `nsfwmeme` : M√™me commande que `meme` mais donne des memes plus adultes / nsfw
- `shiba` : Montre un Shibadorable
- `bird` : Montre un Woiseau
- `cat` : Montre un Chawwww
- `piss` : *pisse*
- `ratio` : ratio + L + fatherless + maidenless
- `randnum [a] <b>` : Donne un nombre entre `a` et `b` ou `0` et `a` si `b` n'est pas pr√©cis√©"""
                    }
                ]
            },
            "tools": {
                "description": "**Outils :** Outils utiles √† utiliser directement dans un salon.",
                "fields": [
                    {
                        "name": "Commandes",
                        "value": """
- `wikipedia [search]` : Recherche un article sur Wikip√©dia
- `translate [language] [sentence]` : Traduit une phrase dans le langage sp√©cifi√©
- `covid [pays (en anglais)]` : Cherche les cas de covid dans un pays sp√©cifi√©
- `urbandict [word]` : Donne la d√©finition d'un mot dans l'Urban Dictionnary"""
                    }
                ]
            }
        }

        # events.py cog
        self.on_command_error = {
            "CommandOnCooldown": {
                "description": "H√©, attends ! Cette commande est en cooldown, Il faut attendre que ce message disparaisse pour utiliser √† nouveau la commande (`{secs} second(s)`)."
            },
            "PrivateMessageOnly": {
                "description": "Cette commande est r√©serv√©e aux messages priv√©s."
            },
            "NoPrivateMessage": {
                "description": "Cette commande est r√©serv√©e aux serveurs."
            },
            "NotOwner": {
                "description": "Tu n'es pas mon cr√©ateur, tu ne peux utilser cette commande."
            },
            "UserNotFound": {
                "description": "Je n'ai pas pu trouver cet utilisateur."
            },
            "ChannelNotFound": {
                "description": "Je n'ai pas pu trouver ce salon."
            },
            "NSFWChannelRequired": {
                "description": "Le salon {channel} n'autorise pas le contenu nsfw ! Les √¢mes sensibles pourraient √™tre choqu√©es."
            },
            "MissingPermissions": {
                "description": "Il vous manque la/les permission(s) {permissions} pour utiliser cette commande.",
                "and": "et"
            },
            "BotMissingPermissions": {
                "description": "On dirait qu'il me manque les permissions n√©cessaires √† la r√©alisation de cette commande. Il faudrait d√©placer mon r√¥le plus haut dans la liste de r√¥les ou que je ne peux pas faire √ßa."
            },
            "BadArgument": {
                "description": "D√©sol√©, mauvais argument, la commande `help` pourrait vous aider."
            },
            "CommandError": {
                "description": "Une erreur m'a emp√™ch√© de faire √ßa.",
                "footer": "Si le probl√®me persiste, contactez le cr√©ateur de Shibbot : {owner}.",
                "dissmiss": "Annuler"
            }
        }

        # tools.py cog
        self.urbain_dictionary = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un mot √† chercher sur l'Urban Dictionnary !\nUsage : `udict [mot]`"
                }
            },
            "embed": {
                "fields": [
                    {
                        "name": "D√©finition de {word} par '{author}'"
                    },
                    {
                        "name": "Exemple"
                    }
                ]
            },
            "buttons": {
                "next": "Prochaine D√©finition",
                "previous": "D√©finition Pr√©c√©dente"
            }
        }
        self.get_covid_stats = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un pays ou utilisez `world` pour obtenir les donn√©es mondiales !\nUsage : `covid [pays]`"
                }
            },
            "loading_embed": {
                "title": "Veuillez patienter...",
                "description": "Je r√©cup√®re les donn√©es..."
            },
            "embed": {
                "title": "Statut COVID-19 pour le pays {country}",
                "description": "Voil√† les statistiques :",
                "fields": [
                    {
                        "name": "Cas"
                    },
                    {
                        "name": "Nombre total de cas"
                    },
                    {
                        "name": "Morts"
                    },
                    {
                        "name": "Nombre total de morts"
                    },
                    {
                        "name": "Soign√©s"
                    },
                    {
                        "name": "Actifs"
                    },
                    {
                        "name": "Cas critiques"
                    },
                    {
                        "name": "Cas pour 1 Million"
                    },
                    {
                        "name": "Morts pour 1 Million"
                    },
                    {
                        "name": "Tests totaux"
                    },
                    {
                        "name": "Tests pour 1 Million"
                    },
                    {
                        "name": "Prenez garde :",
                        "value": "L'information donn√©e ici peut ne pas √™tre √† jour et pr√©cise. Source : [www.worldometers.info](http://www.worldometers.info)."
                    }
                ]
            }
        }
        self.translate_text = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un langage et du texte √† traduire !\nUsage : `trans [language] [sentence]`"
                },
                "bad_args": {
                    "title": "Essayez encore !",
                    "description": "Pas de support pour le langage sp√©cifi√©."
                },
                "unavalaible": {
                    "title": "Indisponible...",
                    "description": "Service indisponible, r√©essayez plus tard."
                }
            },
            "embed": {
                "title": "Traduction",
                "fields": [
                    {
                        "name": "Texte originel :"
                    },
                    {
                        "name": "Texte traduit :"
                    }
                ]
            }
        }
        self.search_on_wikipedia = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi quelque chose √† chercher !\nUsage : `wiki [article]`"
                },
                "not_found": {
                    "description": "Je n'ai rien put trouver pour '{article}', R√©essayez."
                }
            },
            "selection_embed": {
                "description": "Utilisez la barre ci dessous pour obtenir l'objet de votre choix ! (Elle ne mordra pas)"
            },
            "select": {
                "placeholder": "S√©lectionnez un article ici :"
            },
            "loading_embed": {
                "title": "Veuillez patienter...",
                "description": "Je r√©cup√®re les donn√©es... √ßa peut prendre une petite seconde."
            }
        }

        # fun.py cog
        self.get_random_number = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un nombre ou deux !\nUsage : `randint [x] <y>`"

                }
            }
        }
        self.shibes_viewer = {
            "buttons": {
                "previous": "Shiba pr√©c√©dent",
                "next": "Shiba suivant"
            }
        }
        self.cats_viewer = {
            "buttons": {
                "previous": "Chat pr√©c√©dent",
                "next": "Chat suivant"
            }
        }
        self.birds_viewer = {
            "buttons": {
                "previous": "Oiseau pr√©c√©dent",
                "next": "Oiseau suivant"
            }
        }
        self.meme_viewer = {
            "buttons": {
                "previous": "Meme pr√©c√©dent",
                "next": "Meme suivant"
            }
        }
        self.nsfw_meme_viewer = {
            "buttons": {
                "previous": "Meme pr√©c√©dent",
                "next": "Meme suivant"
            }
        }

        # config.py cog
        self.enable_disable_plugins = {
            "embed": {
                "title": "Plugins",
                "description": "Utilisez la barre ci dessous pour choisir les plugins que vous souhaitez activer ou d√©sactiver."
            },
            "options": {
                "mod": {
                    "label": "Mod√©ration",
                    "description": "Vous permet de g√©rer les membres et le serveur."
                },
                "fun": {
                    "label": "Amusement",
                    "description": "Commandes fun. Yay :D"
                },
                "tools": {
                    "label": "Outils",
                    "description": "Outils utiles √† utiliser directement dans un salon."
                },
                "placeholder": "S√©lectionnez un plugin ici :"
            },
            "content": "Fait !"
        }
        self.change_prefix = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un pr√©fixe (doit √™tre inf√©rieur √† 8 caract√®res) !\nUsage : `prefix [pr√©fixe]`"

                },
                "length_exceeded": {
                    "title": "Oops...",
                    "description": "Le pr√©fixe ne doit pas d√©passer 8 caract√®res !"

                }
            },
            "embed": {
                "title": "Fait !",
                "description": "Le pr√©fixe a bien √©t√© chang√© pour `{prefix}`."
            }
        }
        self.change_logs_channel = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un salon pour le logging ! Utilisation : `logs [salon]`"

                }
            },
            "embed": {
                "title": "Fait !",
                "description": "Le salon des logs a bien √©t√© chang√© pour {channel}."
            }
        }
        self.change_language = {
            "embed": {
                "title": "Language",
                "description": "Utilisez la barre ci-dessous pour changer de langage."
            },
            "options": {
                "en": {
                    "label": "English"
                },
                "fr": {
                    "label": "French"
                },
                "placeholder": "Select a language here :"
            },
            "content": "Fait !"
        }

        # mod.py cog
        self.log_on_member_remove = {
            "embed": {
                "action": "Kick",
                "description": "{member} (id : `{member_id}`) a √©t√© kick par {mod}\nRaison : {reason}."
            }
        }
        self.log_on_member_ban = {
            "embed": {
                "action": "Kick",
                "description": "{member} (id : `{member_id}`) a √©t√© banni par {mod}\nRaison : {reason}."
            }
        }
        self.log_on_member_unban = {
            "embed": {
                "action": "Kick",
                "description": "{member} (id : `{member_id}`) n'est plus ban."
            }
        }
        self.log_unmute = {
            "embed": {
                "action": "Unmute",
                "description": "{member} (id : `{member_id}`) n'est plus mute."
            }
        }
        self.log_purge = {
            "embed": {
                "action": "Purge",
                "description": "{mod} a supprim√© {n_message} messages dans {channel}."
            },
        }
        self.clear_messages = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un nombre de messages √† supprimer et au pr√©alable un utilisateur !\nUsage : `clear [quantit√©] <utilisateur>`"
                }
            },
            "member_clear": {
                "title": "Fait !",
                "description": "`{n_messages}` messages de {member} ont √©t√© supprim√©s.",
                "footer": "Les messages plus vieux que 2 semaines ne peuvent √™tre supprim√©s (restriction Discord)."

            },
            "channel_clear": {
                "title": "Fait !",
                "description": "`{n_messages}` messages ont √©t√© supprim√©s dans ce salon."
            }
        }
        self.nuke_channel = {
            "embed": {
                "title": "Ok, ok, attendez une seconde !",
                "description": "Vous √™tes sur le point de nuke ce salon et **plus de 1000 messages peuvent-√™tre supprim√©s**. Etes vous vraiment s√ªr de vouloir faire √ßa ?"
            },
            "buttons": {
                "no": "nah c'est bon",
                "yes": "KADABOOOM"
            },
            "done": {
                "title": "Fait !",
                "description": "`{n_messages}` messages ont cess√© d'exister, √ßa a √©t√© vraiment efficace !"
            }
        }
        self.warn_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† warnsr !\nUsage : `warn [membre] <raison>`"
                }
            },
            "embed": {
                "title": "Warned !",
                "description": "Vous avez warn {member}. Il a d√©sormais `{n_warns}` warn(s) !\nRaison : {reason}"
            },
            "log": {
                "action": "Warn n¬∞{n_warns}",
                "description": "{member} (id : `{member_id}`) a √©t√© warn par {mod}.\nRaison : {reason}."
            },
            "pm": {
                "description": "Vous avez √©t√© warn sur **{guild}**.\nRaison : {reason}."
            }
        }
        self.clear_user_warns = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un utilisateur avec des warns !\nUsage : `clearwarns [membre] <raison>`"
                }
            },
            "embed": {
                "title": "Infractions effac√©es !",
                "description": "Toutes les infractions de {member} ont √©t√© supprim√©s."
            },
            "log": {
                "action": "Effacement d'infractions",
                "description": "{mod} a supprim√© tous les warns de {member}.\nRaison : {reason}."
            }
        }
        self.show_warnings = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un utilisateur !\nUsage : `warnings [membre] <raison>`"
                }
            },
            "embed": {
                "title": "Infractions",
                "description": "Voici toutes les infractions de {member} (id : `{member_id}`) :",
                "fields": {
                    "no_infra": {
                        "name": "Aucune infraction",
                        "value": "Cet utilisateur n'a pas encore √©t√© warn (il doit √™tre un ange... ou les modos font pas leur boulot, jsp)."
                    },
                    "warn": {
                        "name": "Warn n¬∞{n_warn}",
                        "value": "Raison : {reason}\Par {mod} le `{date}`"
                    }
                },
                "buttons": {
                    "previous": "Pr√©c√©dent",
                    "next": "Suivant"
                }
            }
        }
        self.mute_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† mute !\nUsage: `mute[membre] <raison>`"

                },
                "already_muted": {
                    "title": "Oops...",
                    "description": "Ce membre est d√©j√† mute !"
                }
            },
            "embed": {
                "title": "Mute !",
                "description": "J'ai mute {member}.\nRaison : {reason}"
            },
            "log": {
                "action": "Mute",
                "description": "{member} (id : `{member_id}`) a √©t√© mute par {mod}.\nRaison : {reason}."
            },
            "pm": {
                "description": "Vous avez √©t√© mute sur **{guild}**.\nRaison : {reason}."
            }
        }
        self.tempmute_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† tempmute !\nUsage: `tmute [membre] [dur√©e] <raison>`"
                },
                "already_muted": {
                    "title": "Oops...",
                    "description": "Ce membre est d√©j√† tempmute !"
                }
            },
            "embed": {
                "title": "Muted !",
                "description": "{member} est d√©sormais tempmute pour `{duration}`.\nRaison : {reason}"
            },
            "log": {
                "action": "Tempmute",
                "description": "{member} (id : `{member_id}`) a √©t√© tempmute par {mod} pour `{duration}`.\nRaison : {reason}."
            },
            "pm": {
                "description": "Vous avez √©t√© tempmute sur **{guild}** pour `{duration}`.\nRaison : {reason}."
            }
        }
        self.unmute_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† unmute !\nUsage: `tmute [membre]`"
                },
                "not_muted": {
                    "title": "Oops...",
                    "description": "Ce membre n'est pas mute !"
                }
            },
            "embed": {
                "title": "Unmute !",
                "description": "{member} n'est d√©sormais plus mute."
            },
            "pm": {
                "description": "Vous avez √©t√© unmute sur **{guild}**."
            }
        }
        self.yeet_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† expulser !\nUsage : `kick [membre] <raison>`"
                }
            },
            "embed": {
                "title": "Expuls√© !",
                "description": "{member} s'est prit un coup de pied au c*l s'est fait d√©gag√© de votre serveur.\nRaison : {reason}"
            },
            "pm": {
                "description": "Vous avez √©t√© expuls√© de **{guild}**.\nRaison : {reason}"
            }
        }
        self.yeet_members = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi des membres √† expulser !\nUsage : `mkick [memberes s√©par√©s par un espace]`"
                }
            },
            "embed": {
                "title": "Commande d'expulsion de groupe",
                "fields": [
                    {
                        "name": "Expulsion(s) r√©ussie(s)"
                    },
                    {
                        "name": "Expulion(s) rat√©(s)"
                    }
                ]
            },
            "pm": {
                "description": "Vous avez √©t√© expuls√© de **{guild}**."
            }
        }
        self.ban_user = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un utilisateur √† bannir !\nUsage : `ban [utilisateur] <raison>`"
                }
            },
            "embed": {
                "title": "Banni !",
                "description": "Le marteau du ban s'est abbatu sur {member}.\nRaison : {reason}"
            },
            "pm": {
                "description": "Vous avez √©t√© banni de **{guild}**.\nRaison : {reason}"
            }
        }
        self.tempban_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un utilisateur √† tempban !\nUsage: `tban [utilisateur] [dur√©e] <raison>`"
                }
            },
            "embed": {
                "title": "Banni !",
                "description": "{member} a √©t√© banni pour `{duration}`.\nRaison : {reason}"
            },
            "log": {
                "action": "Tempban",
                "description": "{member} (id : `{member_id}`) a √©t√© banni par {mod} pour `{duration}`.\nRaison : {reason}."
            },
            "pm": {
                "description": "Vous avez √©t√© banni sur **{guild}** pour `{duration}`.\nRaison : {reason}."
            }
        }
        self.softban_member = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† soft-ban !\nUsage : `softban [membre] <raison>`"
                }
            },
            "pm": {
                "description": "Vous avez √©t√© soft-ban de **{guild}** pour la raison suivante : '{reason}'.\nUtilisez ce lien pour revenir : {invite}"
            },
            "embed": {
                "title": "Soft-banni !",
                "description": "{member} a √©t√© soft-ban.\nRaison : {reason}"
            },
            "log": {
                "action": "Soft-ban",
                "description": "{member} (id : `{member_id}`) a √©t√© softban par {mod}.\nRaison : {reason}."
            }
        }
        self.ban_members = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi des membres √† bannir !\nUsage : `mban [memberes] <raison>`"
                }
            },
            "embed": {
                "title": "Commande de ban de groupe",
                "fields": [
                    {
                        "name": "Ban(s) r√©ussi(s)"
                    },
                    {
                        "name": "Ban(s) rat√©(s)"
                    }
                ]
            },
            "pm": {
                "description": "Vous avez √©t√© banni de **{guild}**."
            }
        }
        self.unban_user = {
            "checks": {
                "missing_args": {
                    "description": "Donnez-moi un membre √† d√©bannir !\nUsage: `unban [utilisateur]`"
                }
            },
            "embed": {
                "title": "D√©banni !",
                "description": "{member} n'est d√©sormais plus ban."
            },
            "pm": {
                "description": "Vous avez √©t√© d√©banni de **{guild}**."
            }
        }
        self.normalize_nickname = {
            "checks": {
                "missing_args": {
                    "description": "Donnez moi un membre dont je dois normaliser le pseudo !\nUsage : `normalize [membre]`."
                },
                "already_normal": {
                    "title": "Hm.",
                    "description": "`{nickname}` me semble plut√¥t normal, rien n'a chang√©."
                }
            },
            "embed": {
                "title": "Aux standarts !",
                "description": "J'ai nettoy√© le pseudo de {member}, c'est plus lisible d'un coup."
            }
        }

        # misc.py cog
        self.show_avatar = {
            "embed": {
                "description": "L'avatar de {member} :"
            }
        }
        self.get_guild_info = {
            "loading_embed": {
                "description": "Recherche..."
            },
            "embed": {
                "title": "Infos du serveur",
                "description": "Quelques informations sur **{guild}** :",
                "fields": [
                    {
                        "name": "__Informations principales__",
                        "value": "**üîç Nom :** `{guild_name}`\n**üÜî ID :** `{guild_id}`\n**‚è≤ Cr√©√© le :** {date_creation_date} ({relative_creation_date})\n**üí• propri√©taire :** {owner} (id : `{owner_id}`)\n**üíé Palier de boost :** `{premium_tier}` (avec `{premium_sub_tier} boosts`)\n**üîê Niveau de v√©rification :** `{verification_level}`"
                    },
                    {
                        "name": "__Statistiques__",
                        "value": "**:busts_in_silhouette: Total de membres :** `{member_count} membres`\n**- üßî Humains :** `{humain_count} ({humain_count_percent}%)`\n**- ü§ñ Bots :** `{bot_count} ({bot_count_percent}%)`\n**üìö Total de salons :** `{channel_count}`\n**- üóÉ Cat√©gories :** `{category_count}`\n**- üí¨ Texte :** `{text_count} ({text_count_percent}%)`\n**- üîä Voix :** `{voice_count} ({voice_count_percent}%)`"
                    },
                    {
                        "name": "__Roles__"
                    },
                    {
                        "name": "__Emojis__",
                        "value": "(„ÄÇ_„ÄÇ) Aucun √©moji trouv√©."
                    }
                ]
            }
        }
        self.get_user_info = {
            "loading_embed": {
                "description": "Recherche..."
            },
            "embed": {
                "title": "Infos de l'utilisateur",
                "fields": [
                    {
                        "name": "__Informations principales__",
                        "value": "**#Ô∏è‚É£ Nom & tag :** `{user}`\n**üÜî ID :** `{user_id}`\n**‚è≤ Compte cr√©√© le :** {date_creation_date} ({relative_creation_date})\n**ü§ñ Est un bot :** `{is_bot}`\n**:busts_in_silhouette: Serveurs en commun :** `{common_serv}`"
                    },
                    {
                        "name": "__Infos li√©s au membre__",
                        "value": "**üé≠ Pseudo :** `{nickname}`\n**üö™A rejoint le serveur le :** {joined_at} ({relative_joined_at})\n**üé® Activit√© :** `{activity}`\n**Statut :** `{status}`\n**R√¥le le plus haut :** {top_role}"
                    }
                ]
            }
        }
